# If you come from bash you might have to change your $PATH.
export PATH=$HOME/.node_modules/bin:$HOME/go/bin:$HOME/scripts:$HOME/bin:/usr/local/bin:$PATH

export XDG_DATA_DIRS=~/.nix-profile/share/applications/:$XDG_DATA_DIRS 

# Path to your oh-my-zsh installation.
# export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="darkblood"
 # ZSH_THEME="spaceship"

# https://github.com/jackharrisonsherlock/common
 # ZSH_THEME="common"

# ZSH PROMPT
SPACESHIP_CHAR_SYMBOL=❯
# SPACESHIP_CHAR_SUFFIX=" "

# Starship prompt
 eval "$(starship init zsh)"

# PURE PROMPT 
# source: https://github.com/sindresorhus/pure.git 
# fpath+=$HOME/.zsh/pure
# autoload -U promptinit; promptinit
# prompt pure


################################################
#     _    _ _           
#    / \  | (_) __ _ ___ 
#   / _ \ | | |/ _` / __|
#  / ___ \| | | (_| \__ \
# /_/   \_\_|_|\__,_|___/
                       
alias repos="cd ~/Documents/repos/github.com/kirontoo"
alias dotfiles="cd ~/Documents/dotfiles"
alias mindmap="cd ~/Documents/mindmap"
alias blog="cd ~/Documents/repos/github.com/kirontoo/personal-blog"
alias config="cd ~/.config/"
alias ide="~/scripts/tmux-dew.sh"

# source files
alias srcz="source $HOME/.zshrc"
alias srct="source $HOME/.tmux.conf"

alias cp='cp -i'    # confirm before overwriting existing files
alias mv='mv -i'

# remove node modules
alias rmnode='rm -rfv ./node_modules'

################################################

########## filter history completion ###########
autoload -Uz up-line-or-beginning-search down-line-or-beginning-search

zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

bindkey '^[[A'  up-line-or-beginning-search    # Arrow up
bindkey '^[OA'  up-line-or-beginning-search
bindkey '^[[B'  down-line-or-beginning-search  # Arrow down
bindkey '^[OB'  down-line-or-beginning-search
################################################

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git 
)

source $ZSH/oh-my-zsh.sh

# User configuration
# Preferred editor for local and remote sessions
 if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
 else
   export EDITOR='nvim'
 fi

export TERM=xterm-256color

################################################
#  _____  _____  _____ 
# |     ||     ||     |
# |   __||__/  ||   __|
# |  |_  |   __||  |_  
# |   _] |  /  ||   _] 
# |  |   |     ||  |   
# |__|   |_____||__|   
                      

alias fzf='fzf --color='bg:#1e1c31,bg+:#3e3859,info:#63f2f1,border:#100e23,spinner:#87dfeb' \
    --color='hl:#f48fb1,fg:#cbe3e7,header:#62d196,fg+:#cbe3e7' \
    --color='pointer:#f02e6e,marker:#f48fb1,prompt:#a1efd3,hl+:#d4bfff''

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
alias fcd='fzf_change_directory'
alias ffe='fzf_find_edit'
alias fkill='fzf_kill'
alias fgd='fzf_git_diff'
alias fgadd='fzf_git_add'
alias fgl='fzf_git_log'
alias grl='fzf_git_reflog'
alias fcp='fzf_change_proj_dir'

export FZF_DEFAULT_OPTS='
  --height 75% --multi --reverse
  --bind ctrl-f:page-down,ctrl-b:page-up
'
fzf_find_edit() {
    local file=$(
      fzf --query="$1" --no-multi --select-1 --exit-0 \
          --preview 'bat --color=always --line-range :500 {}'
      )
    if [[ -n $file ]]; then
        $EDITOR "$file"
    fi
}


fzf_change_proj_dir() {
    local directory=$(
      ls $(xdg-user-dir DOCUMENTS)/repos/github.com/kirontoo | \
      fzf --query="$1" --no-multi --select-1 --exit-0 \
          --preview 'tree -C {} | head -100'
      )
    if [[ -n $directory ]]; then
      cd "$(xdg-user-dir DOCUMENTS)/repos/github.com/kirontoo/$directory"
    fi
}

fzf_change_directory() {
    local directory=$(
      fd --type d | \
      fzf --query="$1" --no-multi --select-1 --exit-0 \
          --preview 'tree -C {} | head -100'
      )
    if [[ -n $directory ]]; then
        cd "$directory"
    fi
}


fzf_kill() {
    local pid_col
    if [[ $(uname) = Linux ]]; then
        pid_col=2
    elif [[ $(uname) = Darwin ]]; then
        pid_col=3;
    else
        echo 'Error: unknown platform'
        return
    fi
    local pids=$(
      ps -f -u $USER | sed 1d | fzf --multi | tr -s [:blank:] | cut -d' ' -f"$pid_col"
      )
    if [[ -n $pids ]]; then
        echo "$pids" | xargs kill -9 "$@"
    fi
}

fzf_git_add() {
    local selections=$(
      git status --porcelain | \
      fzf --ansi \
          --preview 'if (git ls-files --error-unmatch {2} &>/dev/null); then
                         git diff --color=always {2}
                     else
                         bat --color=always --line-range :500 {2}
                     fi'
      )
    if [[ -n $selections ]]; then
        git add --verbose $(echo "$selections" | cut -c 4- | tr '\n' ' ')
    fi
}

fzf_git_log() {
    local selections=$(
      git log --color=always "$@" |
        fzf --ansi --no-sort --no-height \
            --preview "echo {} | grep -o '[a-f0-9]\{7\}' | head -1 |
                       xargs -I@ sh -c 'git show --color=always @'"
      )
    if [[ -n $selections ]]; then
        local commits=$(echo "$selections" | sed 's/^[* |]*//' | cut -d' ' -f1 | tr '\n' ' ')
        git show $commits
    fi
}

fzf_git_reflog() {
    local selection=$(
      git reflog --color=always "$@" |
        fzf --no-multi --ansi --no-sort --no-height \
            --preview "git show --color=always {1}"
      )
    if [[ -n $selection ]]; then
        git show $(echo $selection | cut -d' ' -f1)
    fi
}

fzf_git_diff() {
  preview="git diff $@ --color=always -- {-1}"
  git diff $@ --name-only | fzf --color=16 -m --ansi --preview $preview --preview-window=down:80%
}
################################################

if [ ! -S ~/.ssh/ssh_auth_sock ]; then
  eval `ssh-agent`
  ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
fi
export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
ssh-add -l > /dev/null || ssh-add

# start only one ssh-agent and reuse the created one
# this is used for sway, althou keys added do not persist on reboot
if ! pgrep -u "$USER" ssh-agent > /dev/null; then
    ssh-agent > "$XDG_RUNTIME_DIR/ssh-agent.env"
fi

# https://github.com/gsamokovarov/jump
# eval "$(jump shell zsh)"
